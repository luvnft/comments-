// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Post {
  id          String   @id @default(cuid())
  comment     String
  contentLink String
  published   Boolean  @default(true)
  author      User?    @relation(fields: [authorId], references: [id])
  authorId    String?
  likes       Like[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String?  @unique
  username      String?  @unique
  isVerified    Boolean  @default(false)
  isActivated   Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  posts         Post[]
  likes         Like[]
  followers     Follow[] @relation("UserFollowees")
  followees     Follow[] @relation("UserFollowers")
  publicAddress String?
}

model Like {
  id       String @id @default(cuid())
  author   User?  @relation(fields: [authorId], references: [id])
  authorId String
  post     Post?  @relation(fields: [postId], references: [id])
  postId   String
}

model Follow {
  id         String @id @default(cuid())
  follower   User   @relation(name: "UserFollowers", fields: [followerId], references: [id])
  followerId String
  followee   User   @relation(name: "UserFollowees", fields: [followeeId], references: [id])
  followeeId String
}
