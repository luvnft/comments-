// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Post {
  id        String   @id @default(cuid())
  content   String
  published Boolean  @default(true)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
  likes     Likes[]
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  posts     Post[]
  likes     Likes[]
  followers Follow[] @relation("UserFollowers")
  followees Follow[] @relation("UserFollowees")
}

model Likes {
  id       String  @id @default(cuid())
  author   User?   @relation(fields: [authorId], references: [id])
  authorId String?
  post     Post?   @relation(fields: [postId], references: [id])
  postId   String?
}

model Follow {
  id         String @id @default(cuid())
  follower   User   @relation(name: "UserFollowers", fields: [followerId], references: [id])
  followerId String
  followee   User   @relation(name: "UserFollowees", fields: [followeeId], references: [id])
  followeeId String
}
